{"ast":null,"code":"import _defineProperty from \"/home/user/Desktop/React Assignment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/user/Desktop/React Assignment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/user/Desktop/React Assignment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/user/Desktop/React Assignment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/user/Desktop/React Assignment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/user/Desktop/React Assignment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\n\nvar _temp,\n    _jsxFileName = \"/home/user/Desktop/React Assignment/src/Components/ToDo Tasks/Dialogs/Create.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Fragment } from \"react\";\nimport { FormControl, InputLabel, MenuItem, Select, TextField, Fab, Button, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/styles\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nvar styles = function styles(theme) {\n  return {\n    FormControl: {\n      width: 500\n    }\n  };\n};\n\nexport default withStyles(styles)((_temp =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Create, _React$Component);\n\n  function Create(props) {\n    var _this;\n\n    _classCallCheck(this, Create);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Create).call(this, props));\n\n    _this.handleToggle = function () {\n      _this.setState({\n        open: !_this.state.open\n      });\n    };\n\n    _this.handleChange = function (name) {\n      return function (event) {\n        _this.setState({\n          task: _objectSpread({}, _this.state.task, _defineProperty({}, name, event.target.value))\n        });\n      };\n    };\n\n    _this.handleSubmit = function () {\n      var task = _this.state.task;\n\n      _this.props.onCreate(_objectSpread({}, task, {\n        id: Math.floor(Math.random() * 100)\n      }));\n\n      _this.setState({\n        open: false,\n        task: {\n          title: \"\",\n          description: \"\",\n          list: \"\",\n          due: \"\"\n        }\n      });\n    };\n\n    _this.state = {\n      open: false,\n      task: {\n        title: \"\",\n        description: \"\",\n        list: \"\",\n        due: \"\"\n      }\n    };\n    return _this;\n  }\n\n  _createClass(Create, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          open = _this$state.open,\n          task = _this$state.task;\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"outlined\",\n        color: \"primary\",\n        onClick: this.handleToggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Fab, {\n        color: \"primary\",\n        \"aria-label\": \"add\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(AddIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }))), React.createElement(Dialog, {\n        open: open,\n        onClose: this.handleToggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"form-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Create a new Task\"), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(DialogContentText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Please fill out the form below\"), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        value: task.title,\n        label: \"Title\",\n        onChange: this.handleChange(\"title\"),\n        margin: \"normal\",\n        className: this.props.classes.FormControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(FormControl, {\n        className: this.props.classes.FormControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"List\"), React.createElement(Select, {\n        value: task.list,\n        onChange: this.handleChange(\"list\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, this.props.categories.map(function (category) {\n        return React.createElement(MenuItem, {\n          key: category,\n          value: category,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, category);\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        value: task.description,\n        multiline: true,\n        rows: \"3\",\n        label: \"Description\",\n        onChange: this.handleChange(\"description\"),\n        margin: \"normal\",\n        className: this.props.classes.FormControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        value: task.due,\n        label: \"Due by\",\n        onChange: this.handleChange(\"due\"),\n        margin: \"normal\",\n        className: this.props.classes.FormControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }))), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        variant: \"contained\",\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Create\"))));\n    }\n  }]);\n\n  return Create;\n}(React.Component), _temp));","map":{"version":3,"sources":["/home/user/Desktop/React Assignment/src/Components/ToDo Tasks/Dialogs/Create.js"],"names":["React","Fragment","FormControl","InputLabel","MenuItem","Select","TextField","Fab","Button","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","withStyles","AddIcon","styles","theme","width","props","handleToggle","setState","open","state","handleChange","name","event","task","target","value","handleSubmit","onCreate","id","Math","floor","random","title","description","list","due","classes","categories","map","category","Component"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport {\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  TextField,\n  Fab,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions\n} from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/styles\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nconst styles = theme => ({\n  FormControl: {\n    width: 500\n  }\n});\n\nexport default withStyles(styles)(\n  class Create extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        open: false,\n        task: {\n          title: \"\",\n          description: \"\",\n          list: \"\",\n          due: \"\"\n        }\n      };\n    }\n\n    handleToggle = () => {\n      this.setState({\n        open: !this.state.open\n      });\n    };\n\n    handleChange = name => event => {\n      this.setState({\n        task: {\n          ...this.state.task,\n          [name]: event.target.value\n        }\n      });\n    };\n\n    handleSubmit = () => {\n      const { task } = this.state;\n      this.props.onCreate({ ...task, id: Math.floor(Math.random() * 100) });\n      this.setState({\n        open: false,\n        task: {\n          title: \"\",\n          description: \"\",\n          list: \"\",\n          due: \"\"\n        }\n      });\n    };\n\n    render() {\n      const { open, task } = this.state;\n      return (\n        <Fragment>\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            onClick={this.handleToggle}\n          >\n            <Fab color=\"primary\" aria-label=\"add\">\n              <AddIcon />\n            </Fab>\n          </Button>\n          <Dialog open={open} onClose={this.handleToggle}>\n            <DialogTitle id=\"form-dialog-title\">Create a new Task</DialogTitle>\n            <DialogContent>\n              <DialogContentText>\n                Please fill out the form below\n              </DialogContentText>\n              <form>\n                <TextField\n                  value={task.title}\n                  label=\"Title\"\n                  onChange={this.handleChange(\"title\")}\n                  margin=\"normal\"\n                  className={this.props.classes.FormControl}\n                />\n                <br />\n                <FormControl className={this.props.classes.FormControl}>\n                  <InputLabel htmlFor=\"list\">List</InputLabel>\n                  <Select\n                    value={task.list}\n                    onChange={this.handleChange(\"list\")}\n                  >\n                    {this.props.categories.map(category => (\n                      <MenuItem key={category} value={category}>\n                        {category}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n                <br />\n                <TextField\n                  value={task.description}\n                  multiline\n                  rows=\"3\"\n                  label=\"Description\"\n                  onChange={this.handleChange(\"description\")}\n                  margin=\"normal\"\n                  className={this.props.classes.FormControl}\n                />\n                <br />\n                <TextField\n                  value={task.due}\n                  label=\"Due by\"\n                  onChange={this.handleChange(\"due\")}\n                  margin=\"normal\"\n                  className={this.props.classes.FormControl}\n                />\n              </form>\n            </DialogContent>\n            <DialogActions>\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                onClick={this.handleSubmit}\n              >\n                Create\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </Fragment>\n      );\n    }\n  }\n);\n"]},"metadata":{},"sourceType":"module"}